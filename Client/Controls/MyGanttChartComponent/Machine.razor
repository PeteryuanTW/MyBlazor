<button class="button is-rounded is-light @statusCss" @onclick="@(()=>{
    getClickMachine.InvokeAsync(machineName);
})">
@machineName-@index</button>

@code {
    [Parameter]
    public string machineName { get; set; } = "";
    [Parameter]
    public int index { get; set; } = 1;
    [Parameter]
    public int machineStatus { get; set; } = 0;
    [Parameter]
    public EventCallback<string> getClickMachine { get; set; }

    string statusCss = "";
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        statusToCss(machineStatus);
    }

    
    private void statusToCss(int statusBit)// green:available red:unavailable white:null
    {
        switch (statusBit)
        {
            case 1:
                statusCss = "is-success";
                break;
            case 2:
                statusCss = "is-danger";
                break;
            default:
                statusCss = "";
                break;
        }
    }
}
