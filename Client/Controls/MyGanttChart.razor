@using System.Reflection
<h2>start at: @minTime, end at: @maxTime</h2>
<table class="table is-bordered">
	<tbody>
		@foreach(WoInfo woInfo in woinfos)
		{
			<tr>
				<td class="is-narrow border-0">
					<button type="button" class="btn btn-outline-success" @onclick="@(()=>
						{
							showAddWODiakogue = true;
							clickMachine = @woInfo.machine;
							wo = @woInfo.wo;
							t = @woInfo.t;
						})">@woInfo.machine</button>
				</td>
				<td>
					<MyGanttBar 
					    wo=@woInfo.wo
						startPositionPercent=@GetStartPosition(@woInfo.t.startTime)
					    widthPercent=@GetWidth(@woInfo.t.startTime, @woInfo.t.endTime)
						startTime=@woInfo.t.startTime
					    endTime=@woInfo.t.endTime
					>
					</MyGanttBar>
				</td>
			</tr>
		}
		<tr>
			<td  class="border-0"></td>
			<td  class="border-0">
				<GanttTimeLine start=@minTime end=@maxTime></GanttTimeLine>
			</td>
		</tr>
	</tbody>
</table>

@if (showAddWODiakogue)
{
	<AddWODialogue display="displayHandler" machine=@clickMachine wo=@wo t=@t ></AddWODialogue>
}



@code {
	DateTime minTime = DateTime.Now;
	DateTime maxTime = DateTime.Now;
	List<DateTime> allTimes = new List<DateTime>();
	TimeSpan interval = TimeSpan.Zero;

	bool showAddWODiakogue = false;
	void displayHandler(bool display)
	{
		showAddWODiakogue=display;
	}

	protected override void OnParametersSet()
	{
		base.OnParametersSet();
		if (woinfos != null && woinfos.Count > 0)
		{
			foreach (WoInfo info in woinfos)
			{
				allTimes.Add(info.t.startTime);
				allTimes.Add(info.t.endTime);
			}
			DateTime tmp_min = allTimes.Min();
			DateTime tmp_max = allTimes.Max();
			minTime = new DateTime(tmp_min.Year, tmp_min.Month, tmp_min.Day, tmp_min.Hour, 00, 00, 000);
			maxTime = new DateTime(tmp_max.Year, tmp_max.Month, tmp_max.Day, tmp_max.Hour + 1, 00, 00, 000);
			interval = maxTime - minTime;
		}
	}

	private float GetStartPosition(DateTime startTime)
	{
		float res = 0.0f;
		TimeSpan distance = startTime - minTime;
		res = (float)(distance / interval);
		return res*100;
	}

	private float GetWidth(DateTime startTime, DateTime endTime)
	{
		float res = 0.0f;
		TimeSpan thisInterval = endTime - startTime;
		res = (float)(thisInterval / interval);
		return res*100;
	}

	[Parameter]
	public List<WoInfo> woinfos { get; set; } = new List<WoInfo>();

	public string clickMachine{ get; set; } = "";
	public string wo { get; set; } = "";
	public StartTimeAndEndTime t = new StartTimeAndEndTime(DateTime.Now, DateTime.Now);
}
