@page "/containerLog"
@using MyBlazor.Shared.DataClass
@inject StateContainer stateContainer
<ul level="0">
  @foreach(MyTreeNode item in tn)
  {
    <TreeNode node=@item Level=1 @key=item/>
  }
</ul>
@code {
	List<MyTreeNode> tn = new();
	protected override Task OnInitializedAsync()
	{
		AddRawData(tn,new StationInfo("F1", "L1", "P1", "M1", "-1"));
		AddRawData(tn, new StationInfo("F1", "L1", "P1", "M1", "-2"));
		AddRawData(tn, new StationInfo("F1", "L1", "P2", "M1", "-1"));
		AddRawData(tn, new StationInfo("F2", "L1", "P1", "M1", "-3"));
		return base.OnInitializedAsync();
	}

	private void AddRawData(List<MyTreeNode> tn, StationInfo s)
	{
		List<MyTreeNode> tmp = tn;
		for (int i = 0; i < s.stations.Count; i++)
		{
			if (!tmp.Exists(x => x.name == s.stations[i]))
			{
				tmp.Add(new MyTreeNode(s.stations[i], new List<MyTreeNode>()));
			}
			tmp = tmp.Find(x => x.name == s.stations[i]).children;
		}
	}

}
