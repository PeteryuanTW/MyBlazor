@page "/schedulingChart"
@using MyBlazor.Shared.DataClass
@inject StateContainer stateContainer
<MyGanttChart allMachineStatus="@machineData" dateTimeID ="@dateTimeID"  jobs = "@jobs" bestDueTime="@bestDueTime"></MyGanttChart>
<div style="margin-top:20px; margin-left:20px">
	<button class="button is-info is-rounded is-light" style="border:none" @onclick="(()=>{showAddWODiakogue = true;})">
	    <i class="oi oi-plus"></i>
    </button>
</div>


@if (showAddWODiakogue)
{
	<AddWODialogue display="displayHandler" ></AddWODialogue>
	//ECInsertTime="NewWOHandler"
}

@code {
	public List<MachineData> machineData = new List<MachineData>();
	private DateTime dateTimeID;
	private List<List<Job>> jobs = new();
	private TimeSpan bestDueTime = TimeSpan.Zero;

	protected override Task OnInitializedAsync()
	{
		machineData = stateContainer.GetMachineData();
		if (stateContainer.GetCurrentScheduling() != null)
		{
			dateTimeID = stateContainer.GetCurrentScheduling().dataTimeID;
		    jobs = stateContainer.GetCurrentScheduling().jobs;
		    bestDueTime = stateContainer.GetCurrentScheduling().dueTime;
		}
		
		stateContainer.OnCurrentSchedulingChange += GetNewScheduling;
		return base.OnInitializedAsync();
	}
	public void Dispose()
	{
		stateContainer.OnCurrentSchedulingChange -= GetNewScheduling;
	}

	bool showAddWODiakogue = false;
	void displayHandler(bool display)
	{
		showAddWODiakogue=display;
	}

	private void GetNewScheduling(SchedulingHistory newScheduling)
	{
		dateTimeID = newScheduling.dataTimeID;
		jobs = newScheduling.jobs;
		bestDueTime = newScheduling.dueTime;
		StateHasChanged();
	}
}